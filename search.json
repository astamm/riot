[{"path":"https://astamm.github.io/riot/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 riot authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":[]},{"path":"https://astamm.github.io/riot/LICENSE.html","id":"vtk","dir":"","previous_headings":"","what":"VTK","title":"MIT License","text":"VTK open-source toolkit licensed BSD license. Copyright (c) 1993-2008 Ken Martin, Schroeder, Bill Lorensen rights reserved. Redistribution use source binary forms, without modification, permitted provided following conditions met: Redistributions source code must retain copyright notice, list conditions following disclaimer. Redistributions binary form must reproduce copyright notice, list conditions following disclaimer documentation /materials provided distribution. Neither name Ken Martin, Schroeder, Bill Lorensen names contributors may used endorse promote products derived software without specific prior written permission. SOFTWARE PROVIDED COPYRIGHT HOLDERS CONTRIBUTORS ``EXPRESS IMPLIED WARRANTIES, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE DISCLAIMED. EVENT SHALL AUTHORS CONTRIBUTORS LIABLE DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, CONSEQUENTIAL DAMAGES (INCLUDING, LIMITED , PROCUREMENT SUBSTITUTE GOODS SERVICES; LOSS USE, DATA, PROFITS; BUSINESS INTERRUPTION) HOWEVER CAUSED THEORY LIABILITY, WHETHER CONTRACT, STRICT LIABILITY, TORT (INCLUDING NEGLIGENCE OTHERWISE) ARISING WAY USE SOFTWARE, EVEN ADVISED POSSIBILITY DAMAGE.","code":""},{"path":"https://astamm.github.io/riot/LICENSE.html","id":"tinyxml-2","dir":"","previous_headings":"","what":"TinyXML-2","title":"MIT License","text":"TinyXML-2 released zlib license. software provided ‘-’, without express implied warranty. event authors held liable damages arising use software. Permission granted anyone use software purpose, including commercial applications, alter redistribute freely, subject following restrictions: origin software must misrepresented; must claim wrote original software. use software product, acknowledgment product documentation appreciated required. Altered source versions must plainly marked , must misrepresented original software. notice may removed altered source distribution.","code":""},{"path":"https://astamm.github.io/riot/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Aymeric Stamm. Author, maintainer. Jeroen Ooms. Contributor. Lee Thomason. Contributor.            Author TinyXML2 C++ XML parser Tim Schäfer. Contributor.            Author freesurferformats R package","code":""},{"path":"https://astamm.github.io/riot/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Stamm (2023). riot: R Inputs/Outputs Tractography. https://github.com/astamm/riot, https://astamm.github.io/riot/.","code":"@Manual{,   title = {riot: R Inputs/Outputs for Tractography},   author = {Aymeric Stamm},   year = {2023},   note = {https://github.com/astamm/riot, https://astamm.github.io/riot/}, }"},{"path":[]},{"path":"https://astamm.github.io/riot/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"R Inputs/Outputs for Tractography","text":"riot (R Input/Output Tractography) package provides R interface importing exporting tractography data R. Currently supported importing formats : native VTK .vtk .vtp files; medInria .fds files; MRtrix .tck/.tsf files; , TrackVis .trk files. package reads tractography data tibble row point characterized least following five variables: X, Y, Z: 3D coordinates current point; PointId: Identification number current point among points streamline belongs ; StreamlineId: Identification number streamline current point belongs . points might also attributes color assigned , case, additional variables properly created import well. user can perform statistical analysis point cloud store new variable (s)deem useful additional column tibble. package also allows write back tibble, including newly created attributes, following exporting formats: native VTK .vtk .vtp files; , medInria .fds files.","code":""},{"path":"https://astamm.github.io/riot/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"R Inputs/Outputs for Tractography","text":"can install released version riot CRAN : Alternatively can install development version riot GitHub :","code":"install.packages(\"riot\") # install.packages(\"remotes\") remotes::install_github(\"astamm/riot\")"},{"path":"https://astamm.github.io/riot/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"R Inputs/Outputs for Tractography","text":"","code":"library(riot)"},{"path":"https://astamm.github.io/riot/index.html","id":"native-vtk-vtk-and-vtp-files","dir":"","previous_headings":"Example","what":"Native VTK .vtk and .vtp files","title":"R Inputs/Outputs for Tractography","text":"","code":"uf_left_vtk  <- read_fascicles(system.file(\"extdata\", \"UF_left.vtk\",  package = \"riot\")) #> Number of data points: 38697 #> Number of streamlines: 2042 #> ✔ The fascicles stored in ']8;;file:///Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/riot/extdata/UF_left.vtk/Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/riot/extdata/UF_left.vtk]8;;' have been successfully imported. uf_left_vtk #> # A tibble: 38,697 × 5 #>        X     Y      Z PointId StreamlineId #>    <dbl> <dbl>  <dbl>   <dbl>        <dbl> #>  1  13.7 -41.8 -13.1        1            1 #>  2  13.0 -40.4 -13.9        2            1 #>  3  13.9 -37.5 -13.8        3            1 #>  4  14.3 -34.7 -12.8        4            1 #>  5  15.2 -32.7 -11.8        5            1 #>  6  14.3 -29.2 -11.3        6            1 #>  7  12.8 -25.5  -9.73       7            1 #>  8  12.4 -22.6  -9.89       8            1 #>  9  11.1 -20.0 -10.7        9            1 #> 10  12.8 -16.6 -12.8       10            1 #> # … with 38,687 more rows uf_left_vtp  <- read_fascicles(system.file(\"extdata\", \"UF_left.vtp\",  package = \"riot\")) #> Number of data points: 38697 #> Number of streamlines: 2042 #> ✔ The fascicles stored in ']8;;file:///Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/riot/extdata/UF_left.vtp/Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/riot/extdata/UF_left.vtp]8;;' have been successfully imported. uf_left_vtp #> # A tibble: 38,697 × 5 #>        X     Y      Z PointId StreamlineId #>    <dbl> <dbl>  <dbl>   <dbl>        <dbl> #>  1  13.7 -41.8 -13.1        1            1 #>  2  13.0 -40.4 -13.9        2            1 #>  3  13.9 -37.5 -13.8        3            1 #>  4  14.3 -34.7 -12.8        4            1 #>  5  15.2 -32.7 -11.8        5            1 #>  6  14.3 -29.2 -11.3        6            1 #>  7  12.8 -25.5  -9.73       7            1 #>  8  12.4 -22.6  -9.89       8            1 #>  9  11.1 -20.0 -10.7        9            1 #> 10  12.8 -16.6 -12.8       10            1 #> # … with 38,687 more rows"},{"path":"https://astamm.github.io/riot/index.html","id":"medinria-fds-files","dir":"","previous_headings":"Example","what":"medInria .fds files","title":"R Inputs/Outputs for Tractography","text":"","code":"uf_left_fds  <- read_fascicles(system.file(\"extdata\", \"UF_left.fds\",  package = \"riot\")) #> Number of data points: 38697 #> Number of streamlines: 2042 #> ✔ The fascicles stored in ']8;;file:///Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/riot/extdata/UF_left.fds/Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/riot/extdata/UF_left.fds]8;;' have been successfully imported. uf_left_fds #> # A tibble: 38,697 × 5 #>        X     Y      Z PointId StreamlineId #>    <dbl> <dbl>  <dbl>   <dbl>        <dbl> #>  1  13.7 -41.8 -13.1        1            1 #>  2  13.0 -40.4 -13.9        2            1 #>  3  13.9 -37.5 -13.8        3            1 #>  4  14.3 -34.7 -12.8        4            1 #>  5  15.2 -32.7 -11.8        5            1 #>  6  14.3 -29.2 -11.3        6            1 #>  7  12.8 -25.5  -9.73       7            1 #>  8  12.4 -22.6  -9.89       8            1 #>  9  11.1 -20.0 -10.7        9            1 #> 10  12.8 -16.6 -12.8       10            1 #> # … with 38,687 more rows"},{"path":"https://astamm.github.io/riot/index.html","id":"mrtrix-tcktsf-files","dir":"","previous_headings":"Example","what":"MRtrix .tck/.tsf files","title":"R Inputs/Outputs for Tractography","text":"","code":"af_left_tck  <- read_fascicles(system.file(\"extdata\", \"AF_left.tck\",  package = \"riot\")) #> ✔ The fascicles stored in ']8;;file:///Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/riot/extdata/AF_left.tck/Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/riot/extdata/AF_left.tck]8;;' have been successfully imported. af_left_tck #> # A tibble: 140,301 × 5 #>        X     Y     Z PointId StreamlineId #>    <dbl> <dbl> <dbl>   <int>        <dbl> #>  1 -56.1 -24.6  9.55       1            1 #>  2 -51.4 -25.0  6.49       2            1 #>  3 -49.2 -25.3  5.80       3            1 #>  4 -46.4 -25.2  5.68       4            1 #>  5 -44.5 -24.7  5.19       5            1 #>  6 -42.2 -24.3  4.06       6            1 #>  7 -40.4 -24.7  3.09       7            1 #>  8 -39.2 -25.5  2.57       8            1 #>  9 -38.4 -26.5  2.70       9            1 #> 10 -37.1 -28.6  3.84      10            1 #> # … with 140,291 more rows"},{"path":"https://astamm.github.io/riot/index.html","id":"trackvis-trk-files","dir":"","previous_headings":"Example","what":"TrackVis .trk files","title":"R Inputs/Outputs for Tractography","text":"","code":"cc_mid_trk  <- read_fascicles(system.file(\"extdata\", \"CCMid.trk\",  package = \"riot\")) #> ✔ The fascicles stored in ']8;;file:///Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/riot/extdata/CCMid.trk/Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/riot/extdata/CCMid.trk]8;;' have been successfully imported. cc_mid_trk #> # A tibble: 112,675 × 5 #>        X     Y     Z PointId StreamlineId #>    <dbl> <dbl> <dbl>   <int>        <int> #>  1  8.66 -31.4  68.6       1            1 #>  2  8.89 -31.3  68.1       2            1 #>  3  9.11 -31.2  67.7       3            1 #>  4  9.34 -31.2  67.2       4            1 #>  5  9.56 -31.1  66.8       5            1 #>  6  9.79 -31.0  66.4       6            1 #>  7 10.0  -31.0  65.9       7            1 #>  8 10.2  -30.9  65.5       8            1 #>  9 10.5  -30.8  65.0       9            1 #> 10 10.7  -30.8  64.6      10            1 #> # … with 112,665 more rows"},{"path":"https://astamm.github.io/riot/index.html","id":"dependencies","dir":"","previous_headings":"","what":"Dependencies","title":"R Inputs/Outputs for Tractography","text":"riot package two dependencies: VTK TinyXML-2. slightly altered respect original softwares compliance CRAN policy. Specifically: vtk/include/utf8.h header file modified ensure LF line endings; source files CommonDataModel vtkzlib modules modified avoid compilation warnings arising using LLVM Apple clang GNU gcc compilers; tinyxml2.cpp modified avoid use stdout printf per Writing R Extensions manual recommendations R input/output mechanism writing console.","code":""},{"path":"https://astamm.github.io/riot/index.html","id":"acknowledgements","dir":"","previous_headings":"","what":"Acknowledgements","title":"R Inputs/Outputs for Tractography","text":"authors like thank Tim Schäfer, author freesurferformats package, helpful code read MRtrix TrackVis tractography file formats.","code":""},{"path":"https://astamm.github.io/riot/reference/read_fascicles.html","id":null,"dir":"Reference","previous_headings":"","what":"Import fascicles into R — read_fascicles","title":"Import fascicles into R — read_fascicles","text":"Import fascicles R","code":""},{"path":"https://astamm.github.io/riot/reference/read_fascicles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import fascicles into R — read_fascicles","text":"","code":"read_fascicles(file)"},{"path":"https://astamm.github.io/riot/reference/read_fascicles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import fascicles into R — read_fascicles","text":"file Path file containing tractography data. Currently supported files .vtk, .vtp, medInria .fds, .tck/.tsf MRtrix, .trk TrackVis file formats.","code":""},{"path":"https://astamm.github.io/riot/reference/read_fascicles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import fascicles into R — read_fascicles","text":"tibble storing set fascicles.","code":""},{"path":"https://astamm.github.io/riot/reference/read_fascicles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import fascicles into R — read_fascicles","text":"","code":"uf_left_vtk <- read_fascicles(system.file(\"extdata\", \"UF_left.vtk\",  package = \"riot\")) #> Number of data points: 38697 #> Number of streamlines: 2042 #> ✔ The fascicles stored in /home/runner/work/_temp/Library/riot/extdata/UF_left.vtk have been successfully imported."},{"path":"https://astamm.github.io/riot/reference/write_fascicles.html","id":null,"dir":"Reference","previous_headings":"","what":"Export fascicles from R — write_fascicles","title":"Export fascicles from R — write_fascicles","text":"Export fascicles R","code":""},{"path":"https://astamm.github.io/riot/reference/write_fascicles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export fascicles from R — write_fascicles","text":"","code":"write_fascicles(x, file)"},{"path":"https://astamm.github.io/riot/reference/write_fascicles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export fascicles from R — write_fascicles","text":"x object class maf_df storing tractography data. file Path file tractography data saved. Currently supported files .vtk, .vtp medInria .fds file formats.","code":""},{"path":"https://astamm.github.io/riot/reference/write_fascicles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export fascicles from R — write_fascicles","text":"input tractography data (invisibly) function can used pipes.","code":""},{"path":"https://astamm.github.io/riot/reference/write_fascicles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Export fascicles from R — write_fascicles","text":"","code":"uf_left  <- read_fascicles(system.file(\"extdata\", \"UF_left.vtp\",  package = \"riot\")) #> Number of data points: 38697 #> Number of streamlines: 2042 #> v The fascicles stored in /home/runner/work/_temp/Library/riot/extdata/UF_left.vtp have been successfully imported. if (FALSE) { out <- fs::file_temp(ext = \".vtp\") write_fascicles(uf_left, file = out) }"},{"path":"https://astamm.github.io/riot/news/index.html","id":"riot-111","dir":"Changelog","previous_headings":"","what":"riot 1.1.1","title":"riot 1.1.1","text":"Modified VTK source files avoid compilation warnings arising using LLVM Apple clang GNU gcc compilers.","code":""},{"path":"https://astamm.github.io/riot/news/index.html","id":"riot-110","dir":"Changelog","previous_headings":"","what":"riot 1.1.0","title":"riot 1.1.0","text":"CRAN release: 2023-01-06 Update VTK v9.2.4; Avoid prototype checks vtkzlib using LLVM Clang compiler.","code":""},{"path":"https://astamm.github.io/riot/news/index.html","id":"riot-100","dir":"Changelog","previous_headings":"","what":"riot 1.0.0","title":"riot 1.0.0","text":"CRAN release: 2022-05-10 first major release, : Added support read MRtrix .tck/.tsf file formats (#5). Added support read TrackVis .trk file formats (#5). Use one core compile VTK compliance CRAN policy (thanks Prof. B. Ripley). Added tilde expansion file paths. make first major release consider popular tractography formats now supported riot. chose design support VTK medInria file formats writing.","code":""},{"path":"https://astamm.github.io/riot/news/index.html","id":"riot-001","dir":"Changelog","previous_headings":"","what":"riot 0.0.1","title":"riot 0.0.1","text":"CRAN release: 2022-05-05 Added NEWS.md file track changes package. Supports reading writing .vtk, .vtp .fds file formats.","code":""}]
